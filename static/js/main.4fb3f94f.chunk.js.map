{"version":3,"sources":["pages/Lobby.jsx","Contexts/NKN/nkn.js","MessageTypes/types.js","Hooks/useCanvas.js","Components/Canvas/Canvas.jsx","pages/Editor.jsx","App.js","index.js"],"names":["Lobby","NknContext","createContext","useClient","useState","client","setClient","isConnected","setIsConnected","wallet","setWallet","useEffect","nkn","Wallet","rpcServerAddr","useWallet","publishTo","topic","payload","a","publish","JSON","stringify","console","log","subscribeTo","subscribe","unSubscribe","unsubscribe","sendTo","user","send","getSubscribers","getSubscription","addr","MultiClient","seed","getSeed","onConnect","onMessage","src","data","parse","window","dispatchEvent","CustomEvent","type","detail","onMessageType","handler","addEventListener","NknProvider","children","Provider","value","CANVAS_CHANGE","useCanvas","canvasRef","useRef","parentRef","location","useLocation","canvas","setCanvas","width","setWidth","height","setHeight","setTopic","useContext","noDuplicate","arr1","arr2","newArr","el2","isEqual","el1","push","subscribing","savedTopic","pathname","slice","localStorage","getItem","setItem","fabric","Canvas","current","isDrawingMode","interval","setInterval","subs","expiresAt","clearInterval","on","opt","state","evt","oldCanvas","toObject","newCanvas","Object","assign","objects","loadFromJSON","getBoundingClientRect","parentWidth","parentHeight","renderAll","ref","style","backgroundColor","borderRadius","onChange","freeDrawingBrush","color","target","min","max","defaultValue","Main","tw","main","Editor","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fb3f94f.chunk.js","sourcesContent":["\nconst Lobby = () => {\n\n    return (\n        <main>lobby</main>\n    )\n}\n\nexport default Lobby\n","import { useEffect, useState, useContext, createContext } from 'react'\nimport nkn from 'nkn-sdk'\n\nconst NknContext = createContext()\n\nconst useWallet = () => {\n    const [wallet, setWallet] = useState(null)\n    useEffect(() => {\n        setWallet(new nkn.Wallet({ rpcServerAddr: 'http://mainnet-seed-0001.nkn.org:30003' }))\n    },[])\n\n    return wallet\n}\n\nconst useClient = () => {\n    const [client, setClient] = useState(null)\n    const [isConnected,setIsConnected] = useState(false)\n    const wallet = useWallet()\n    const publishTo = async (topic,payload) => {\n        try {\n\n            return await client.publish(topic,JSON.stringify(payload))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const subscribeTo = async topic => {\n        try {\n            return await client.subscribe(topic,400000)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const unSubscribe = async topic => {\n        try {\n            return await client.unsubscribe(topic)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const sendTo = async (user,payload) => {\n        try {\n            \n            return await client.send(user, JSON.stringify(payload))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const getSubscribers = async topic => {\n        try {\n            return await client.getSubscribers(topic)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const getSubscription = async topic => {\n        try {\n            return await client.getSubscription(topic,client.addr)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const onMessageType = (type, handler) => {\n        window.addEventListener(type, handler)\n    }\n    useEffect(() => {\n        if (wallet) {\n\n            setClient( new nkn.MultiClient({ seed: wallet.getSeed() }) )\n        }\n    }, [wallet])\n    useEffect(() => {\n        if (client) {\n            client.onConnect(() => {\n                setIsConnected(true)\n            })\n            client.onMessage(({src, payload}) => {\n                const data = JSON.parse(payload)\n                data.user = src\n                window.dispatchEvent(new CustomEvent(data.type,{ detail: data }))\n            })\n        }\n    },[client])\n\n    return {\n        client,\n        wallet,\n        isConnected,\n        publishTo,\n        subscribeTo,\n        unSubscribe,\n        sendTo,\n        onMessageType,\n        getSubscribers,\n        getSubscription\n    }\n}\n\nexport const NknProvider = ({children}) => {\n    const nkn = useClient()\n    return (\n        <NknContext.Provider value={nkn}>{ children }</NknContext.Provider>\n    )\n}\n\nexport const useNkn = () => {\n    return useContext(NknContext)\n}\n","export const REQUEST_ROOMS = 'REQUEST_ROOMS'\n\nexport const NEW_ROOM = 'NEW_ROOM'\n\nexport const UPDATE_ROOMS = 'UPDATE_ROOMS'\n\nexport const CANVAS_CHANGE = 'CANVAS_CHANGE'\n","import {useRef, useEffect, useState} from 'react'\nimport { useLocation } from 'react-router-dom'\nimport {useNkn} from '../Contexts/NKN/nkn'\nimport { CANVAS_CHANGE } from '../MessageTypes/types'\nimport { fabric } from 'fabric'\n\n\nexport const useCanvas = () => {\n    const canvasRef = useRef()\n    const parentRef = useRef()\n    const location = useLocation()\n    const [canvas,setCanvas] = useState(null)\n    const [width, setWidth ] = useState(300)\n    const [height, setHeight] = useState(150)\n    const [topic,setTopic] = useState('')\n    const {onMessageType, publishTo,getSubscription, isConnected,unSubscribe, subscribeTo} = useNkn()\n    const noDuplicate = (arr1, arr2) => {\n        let newArr = [...arr1]\n        for (let el2 of arr2) {\n            let isEqual = false\n            for (let el1 of arr1) {\n                if (JSON.stringify(el1) === JSON.stringify(el2)) {\n                    isEqual = true\n                }\n            }\n            if (!isEqual) {\n                newArr.push(el2)\n            }\n        }\n        return newArr\n    }\n    const testingSubscription = async topic => {\n        try {\n            console.log(await getSubscription(topic))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const subscribing = async topic => {\n        try {\n            console.log(await subscribeTo(topic))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    useEffect(() => {\n        if (isConnected) {\n            const savedTopic = location.pathname.slice(1)\n            if (savedTopic !== localStorage.getItem('subscription')) unSubscribe(localStorage.getItem('subscription'))\n            setTopic(savedTopic)\n            subscribing(savedTopic)\n            localStorage.setItem('subscription', savedTopic)\n            setCanvas(new fabric.Canvas(canvasRef.current))\n        }\n    }, [canvasRef,isConnected])\n\n\n    useEffect(() => {\n        if (canvas) {\n            canvas.isDrawingMode = true\n            const interval = setInterval(async () => {\n                let subs = await getSubscription(topic)\n                console.log('CONNECTING WITH PEERS...')\n                if (subs?.expiresAt > 0) {\n                    console.log(subs)\n                    console.log('SUBSCRIBED')\n                    clearInterval(interval)\n                }\n            },1000)\n            canvas.on('path:created', opt => {\n                publishTo(topic,{ type: CANVAS_CHANGE, state: canvas })\n            })\n            onMessageType(CANVAS_CHANGE, evt => {\n                const oldCanvas = canvas.toObject()\n                const newCanvas = Object.assign({}, oldCanvas, {\n                    objects: noDuplicate(oldCanvas.objects,evt.detail.state.objects)\n                })\n\n                canvas.loadFromJSON(newCanvas)\n            })\n\n            window.addEventListener('resize', () => {\n\n                const { width: parentWidth, height: parentHeight } = parentRef.current.getBoundingClientRect()\n                setWidth(parentWidth)\n                setHeight(parentHeight)\n                canvas.renderAll()\n            })\n        }\n    },[canvas])\n\n    useEffect(() => {\n        if (parentRef) {\n        }\n    }, [parentRef, canvasRef])\n    useEffect(() => {\n\n        const {width: parentWidth, height: parentHeight} = parentRef.current.getBoundingClientRect()\n        setWidth(parentWidth)\n        setHeight(parentHeight)\n    },[])\n    return {\n        canvasRef,\n        canvas,\n        parentRef,\n        height,\n        width\n    }\n}\n","import { useCanvas } from '../../Hooks/useCanvas'\nimport '../../styles/canvas.css'\n\nconst Canvas = () => {\n\n    const {canvasRef, canvas, parentRef, width, height } = useCanvas()  \n    return (\n        <section ref={parentRef} style={{ width: '100vw', height: '80vh', backgroundColor: 'white', borderRadius: '10px' }}>\n        <canvas \n        ref={canvasRef} width={width} height={height} ></canvas>\n        <input type=\"color\" onChange={ evt => canvas.freeDrawingBrush.color = evt.target.value } />\n        <input type=\"range\" min='1' max='50' defaultValue='1' onChange={ evt => canvas.freeDrawingBrush.width = evt.target.value} />\n        </section>\n    )\n}\n\nexport default Canvas\n","import tw from 'twin.macro'\nimport Canvas from '../Components/Canvas/Canvas'\n\nconst Main = tw.main`\nh-screen bg-blue-500\n`\n\nconst Editor = () => {\n    return (\n        <Main>\n            <Canvas />\n        </Main>\n    )\n}\n\nexport default Editor\n","import { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Lobby from './pages/Lobby'\nimport Editor from './pages/Editor'\n\nfunction App() {\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path='/' exact component={Lobby} />\n                <Route path='/:room' component={Editor}/>\n            </Switch>\n        </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { NknProvider } from './Contexts/NKN/nkn'\nimport 'tailwindcss/dist/base.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <NknProvider>\n        <App />\n    </NknProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}